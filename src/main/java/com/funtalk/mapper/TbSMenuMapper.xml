<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.funtalk.mapper.TbSMenuMapper" >
  <resultMap id="BaseResultMap" type="com.funtalk.pojo.TbSMenu" >
    <result column="menu_id" property="menuId" jdbcType="VARCHAR" />
    <result column="menu_name" property="menuName" jdbcType="VARCHAR" />
    <result column="menu_type" property="menuType" jdbcType="VARCHAR" />
    <result column="menu_parent" property="menuParent" jdbcType="VARCHAR" />
    <result column="menu_order" property="menuOrder" jdbcType="VARCHAR" />
    <result column="page_link" property="pageLink" jdbcType="VARCHAR" />
    <result column="if_valid" property="ifValid" jdbcType="VARCHAR" />
    <result column="r_menu_id" property="rMenuId" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    menu_id, menu_name, menu_type, menu_parent, menu_order, page_link, if_valid
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.funtalk.pojo.TbSMenuExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_s_menu
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.funtalk.pojo.TbSMenuExample" >
    delete from tb_s_menu
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.funtalk.pojo.TbSMenu" >
    insert into tb_s_menu (menu_id, menu_name, menu_type, 
      menu_parent, menu_order, page_link, 
      if_valid)
    values (#{menuId,jdbcType=VARCHAR}, #{menuName,jdbcType=VARCHAR}, #{menuType,jdbcType=VARCHAR}, 
      #{menuParent,jdbcType=VARCHAR}, #{menuOrder,jdbcType=VARCHAR}, #{pageLink,jdbcType=VARCHAR}, 
      #{ifValid,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.funtalk.pojo.TbSMenu" >
    insert into tb_s_menu
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="menuId != null" >
        menu_id,
      </if>
      <if test="menuName != null" >
        menu_name,
      </if>
      <if test="menuType != null" >
        menu_type,
      </if>
      <if test="menuParent != null" >
        menu_parent,
      </if>
      <if test="menuOrder != null" >
        menu_order,
      </if>
      <if test="pageLink != null" >
        page_link,
      </if>
      <if test="ifValid != null" >
        if_valid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="menuId != null" >
        #{menuId,jdbcType=VARCHAR},
      </if>
      <if test="menuName != null" >
        #{menuName,jdbcType=VARCHAR},
      </if>
      <if test="menuType != null" >
        #{menuType,jdbcType=VARCHAR},
      </if>
      <if test="menuParent != null" >
        #{menuParent,jdbcType=VARCHAR},
      </if>
      <if test="menuOrder != null" >
        #{menuOrder,jdbcType=VARCHAR},
      </if>
      <if test="pageLink != null" >
        #{pageLink,jdbcType=VARCHAR},
      </if>
      <if test="ifValid != null" >
        #{ifValid,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.funtalk.pojo.TbSMenuExample" resultType="java.lang.Integer" >
    select count(*) from tb_s_menu
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update tb_s_menu
    <set >
      <if test="record.menuId != null" >
        menu_id = #{record.menuId,jdbcType=VARCHAR},
      </if>
      <if test="record.menuName != null" >
        menu_name = #{record.menuName,jdbcType=VARCHAR},
      </if>
      <if test="record.menuType != null" >
        menu_type = #{record.menuType,jdbcType=VARCHAR},
      </if>
      <if test="record.menuParent != null" >
        menu_parent = #{record.menuParent,jdbcType=VARCHAR},
      </if>
      <if test="record.menuOrder != null" >
        menu_order = #{record.menuOrder,jdbcType=VARCHAR},
      </if>
      <if test="record.pageLink != null" >
        page_link = #{record.pageLink,jdbcType=VARCHAR},
      </if>
      <if test="record.ifValid != null" >
        if_valid = #{record.ifValid,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update tb_s_menu
    set menu_id = #{record.menuId,jdbcType=VARCHAR},
      menu_name = #{record.menuName,jdbcType=VARCHAR},
      menu_type = #{record.menuType,jdbcType=VARCHAR},
      menu_parent = #{record.menuParent,jdbcType=VARCHAR},
      menu_order = #{record.menuOrder,jdbcType=VARCHAR},
      page_link = #{record.pageLink,jdbcType=VARCHAR},
      if_valid = #{record.ifValid,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>

  <select id="getMenuByUserName"  resultMap="BaseResultMap" >

   SELECT menu_parent, menu_id,menu_name,page_link,r_menu_id from
   (SELECT menu_parent, menu_id,menu_name,page_link, '' r_menu_id FROM TB_S_MENU a WHERE a.if_valid='1' AND
    (a.menu_id IN   (SELECT a.menu_parent
   FROM TB_S_MENU a  JOIN tb_r_menu_employee b  ON a.if_valid='1' AND a.menu_id =b.menu_id AND b.employee_id IN(
   SELECT employee_id FROM tb_s_employee WHERE WORK_NO = #{userName} ))  OR a.menu_id='1')
   UNION ALL
   SELECT menu_parent, a.menu_id,menu_name,page_link,b.menu_id r_menu_id
   FROM TB_S_MENU a  JOIN tb_r_menu_employee b  ON a.if_valid='1' AND a.menu_id =b.menu_id AND b.employee_id IN(
   SELECT employee_id FROM tb_s_employee WHERE WORK_NO = #{userName} )) m
   order by menu_id

</select>
</mapper>